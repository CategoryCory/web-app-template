services:
  frontend:
    command: npm run dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
  
  backend:
    command: dotnet watch run
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_HOST=postgres_db
      - POSTGRES_USER=pguser
      - POSTGRES_PASSWORD=pgpassword
      - POSTGRES_DB=pgdb
    volumes:
      - ./backend:/src
      - ./backend/appsettings.Development.json:/app/appsettings.json
    depends_on:
      - postgres_db
      - migrate_db
  
  migrate_db:
    container_name: migrate_db
    image: mcr.microsoft.com/dotnet/sdk:8.0
    working_dir: /src
    entrypoint: ["/bin/sh", "/src/Scripts/dev_entrypoint.sh"]
    volumes:
      - ./backend:/src
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_HOST=postgres_db
      - POSTGRES_USER=pguser
      - POSTGRES_PASSWORD=pgpassword
      - POSTGRES_DB=pgdb
    depends_on:
      - postgres_db

  postgres_db:
    container_name: postgres_db
    image: postgres:16.4
    environment:
      - POSTGRES_USER=pguser
      - POSTGRES_PASSWORD=pgpassword
      - POSTGRES_DB=pgdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata: